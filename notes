#!/bin/bash

# Default directory to scan (change to your default directory if needed)
NOTES_DIR="$HOME/.notes"
ACTIONS=("New" "Open" "Search" "Delete" "Quit")
CURRENT_DATE_TIME=$(date +"%d-%m-%Y-%H-%M-%S")
TEXT_FORMAT="txt"
EDITOR="${EDITOR:-nano}"
BAT_THEME="OneHalfLight"

trap "exit" SIGINT SIGTERM

show_menu() {
	while true; do
		selected_action=$(printf "%s\n" "${ACTIONS[@]}" | fzf --height=20% --border --layout=reverse --prompt="Choose an action: ")
		if [[ $? != 0 ]]; then
			break
		fi
		case $selected_action in
			"New")
				create_new_note
				;;
			"Open")
				open_note
				;;
			"Search")
				search_notes
				;;
			"Delete")
				delete_notes
				;;
			"Quit")
				break
				;;
			*)
				echo "Invalid action"
				;;
		esac
	done
}

create_new_note(){
	${EDITOR} "$NOTES_DIR/$CURRENT_DATE_TIME.$TEXT_FORMAT"
}

open_note(){
	note=$(find "$NOTES_DIR" -type f -name "*.$TEXT_FORMAT" | xargs -I {} basename {} | fzf --border --layout=reverse --ignore-case --prompt="Open: " \
	--preview-window=down:80%:noinfo:wrap --preview="bat --color=always --theme=$BAT_THEME --style=plain $NOTES_DIR/{}")

	if [[ -n "$note" ]]; then
		${EDITOR} "$NOTES_DIR/$note"
	fi
}

delete_notes(){
	notes=$(find "$NOTES_DIR" -type f -name "*.$TEXT_FORMAT" | xargs -I {} basename {} | fzf --border --layout=reverse --multi --ignore-case --prompt="Delete: " \
	--preview-window=down:80%:noinfo:wrap --preview="bat --color=always --theme=$BAT_THEME --style=plain $NOTES_DIR/{}")

	if [[ -n "$notes" ]]; then
		for note in $notes; do
			rm "$NOTES_DIR/$note"
		done
	fi
}

search_notes(){
	selected=$(echo "Enter your query to begin searching" | fzf --bind 'change:reload(
		if [[ -z {q} ]]; then
			echo "Enter your query to begin searching"
		else
			echo Found $(grep -rni --include="*."'$TEXT_FORMAT' {q} '$NOTES_DIR' 2> /dev/null | wc -l) results
			grep -rni --include="*."'$TEXT_FORMAT' {q} '$NOTES_DIR' 2> /dev/null |
			while IFS=: read -r FILE_NAME LINE CONTENT; do
				CLEANED_CONTENT=$(echo "$CONTENT" | sed "s/://g")
				echo "$CLEANED_CONTENT:$LINE:$(basename "$FILE_NAME")"
			done
		fi)' \
	--border --layout=reverse --no-info --preview-window=down:80%:noinfo:wrap --ignore-case --header-lines=1 --prompt="Search: " \
	--preview 'IFS=":" read -r CONTENT LINE FILE_NAME <<< {}
		[[ -z {q} ]] && exit
		if ! [[ -z {} ]]; then
			MAX_LINES=$(wc -l < '$NOTES_DIR'/$FILE_NAME)
			START_LINE=$(($LINE > 5 ? $LINE - 5 : 1))
			END_LINE=$(($LINE + 5 < MAX_LINES ? $LINE + 5 : MAX_LINES));
			echo -e "\e[1m$FILE_NAME\e[0m"
			echo
			bat --color=always --theme='$BAT_THEME' --style=plain --paging=always --highlight-line=$LINE --line-range $START_LINE:$END_LINE '$NOTES_DIR'/$FILE_NAME
		fi')
        
	if [[ -n "$selected" ]]; then
		IFS=":" read -r CONTENT LINE FILE_NAME <<< $selected
		${EDITOR} +$LINE "$NOTES_DIR/$FILE_NAME"
	fi
}

show_menu
